(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



BeginPackage["mathematicatalkpackage`"]


DD::usage="";
EchoTiming::usage="";
PushOptions::usage="";
PackageGenerator::usage="";


Begin["`Private`"]


Clear[DD];
DD[expr_,x_]:=Flatten[{
expr,
\!\(
\*SubscriptBox[\(\[PartialD]\), \(x\)]expr\),
\!\(
\*SubscriptBox[\(\[PartialD]\), \(x\)]\(
\*SubscriptBox[\(\[PartialD]\), \(x\)]expr\)\)}];
DD[x_]:=DD[#,x]&;


Clear[EchoTiming];
EchoTiming[expr_] := Module[{x},

  x=Timing[expr];

  Print[x[[1]]];

x[[2]]
  ]


PushOptions[fn_,explicitOptions_,parentSymbol_]:=Module[{opts1,opts2},

opts1=FilterRules[Options[parentSymbol],Except[explicitOptions]];
opts2=FilterRules[Flatten[{opts1,explicitOptions}],Options[fn]];

fn[##,Evaluate[opts2]]&
];
PushOptions[a_,b_]:=PushOptions[#,a,b]&;


PackageGenerator[theName_String]:=
Catch@Module[{name,document,directory,nb},

name=StringReplace[theName,{Except[WordCharacter]->""}];

If[name==="",Throw[$Failed]];

document=
DocumentNotebook[
{
TextCell[#,"Title",TextAlignment->Center]&[name<>".m package"],
ExpressionCell[Defer[BeginPackage[#]],"Input"]&[name<>"`"],
TextCell["Usage messages","Subsection"],
TextCell["`Private context","Section"],
ExpressionCell[Defer[Begin["`Private`"]],"Input"],
TextCell["Definitions","Subsection"],
TextCell["End of `Private context","Section"],
ExpressionCell[Defer[End[]],"Input"],
TextCell["End of package context","Section"],
ExpressionCell[Defer[EndPackage[]],"Input"]
}
,
StyleDefinitions->Notebook[{
Cell[StyleData[StyleDefinitions->"Default.nb"]],Cell[StyleData["Code"],PageWidth->WindowWidth,AutoIndent->Automatic,AutoSpacing->True,LineBreakWithin->Automatic,LineIndent->1,LinebreakAdjustments->{0.85,2,10,0,1}],Cell[StyleData["Input"],InitializationCell->True]},Visible->False,StyleDefinitions->"PrivateStylesheetFormatting.nb"],
AutoGeneratedPackage->Automatic
];

nb=CreateWindow[document];

directory=SystemDialogInput["Directory", 
FileNameJoin[{$UserBaseDirectory,"/Applications"}]];

If[directory===$Canceled,Throw[$Canceled]];

NotebookSave[nb,FileNameJoin[{directory,name<>".nb"}]]
];


End[]


EndPackage[]
